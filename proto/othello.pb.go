// Code generated by protoc-gen-go.
// source: proto/othello.proto
// DO NOT EDIT!

/*
Package othello is a generated protocol buffer package.

It is generated from these files:
	proto/othello.proto

It has these top-level messages:
	CreateUserRequest
	CreateUserReply
	DeleteUserRequest
	DeleteUserReply
	LoginRequest
	LoginReply
	ShowGamesRequest
	ShowGamesReply
	GetGameRequest
	GetGameReply
	MakeMoveRequest
	MakeMoveReply
	Game
	Move
*/
package othello

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Game_Status int32

const (
	Game_LOOKING_FOR_OPPONENT Game_Status = 0
	Game_PLAYING              Game_Status = 1
	Game_COMPLETED            Game_Status = 2
)

var Game_Status_name = map[int32]string{
	0: "LOOKING_FOR_OPPONENT",
	1: "PLAYING",
	2: "COMPLETED",
}
var Game_Status_value = map[string]int32{
	"LOOKING_FOR_OPPONENT": 0,
	"PLAYING":              1,
	"COMPLETED":            2,
}

func (x Game_Status) String() string {
	return proto.EnumName(Game_Status_name, int32(x))
}
func (Game_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 0} }

type Game_CompletionReason int32

const (
	Game_NOT_COMPLETED Game_CompletionReason = 0
	Game_P1_WIN        Game_CompletionReason = 1
	Game_P2_WIN        Game_CompletionReason = 2
	Game_TIE           Game_CompletionReason = 3
	Game_ERROR         Game_CompletionReason = 4
)

var Game_CompletionReason_name = map[int32]string{
	0: "NOT_COMPLETED",
	1: "P1_WIN",
	2: "P2_WIN",
	3: "TIE",
	4: "ERROR",
}
var Game_CompletionReason_value = map[string]int32{
	"NOT_COMPLETED": 0,
	"P1_WIN":        1,
	"P2_WIN":        2,
	"TIE":           3,
	"ERROR":         4,
}

func (x Game_CompletionReason) String() string {
	return proto.EnumName(Game_CompletionReason_name, int32(x))
}
func (Game_CompletionReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 1} }

type Game_NextMove int32

const (
	Game_P1  Game_NextMove = 0
	Game_P2  Game_NextMove = 1
	Game_END Game_NextMove = 2
)

var Game_NextMove_name = map[int32]string{
	0: "P1",
	1: "P2",
	2: "END",
}
var Game_NextMove_value = map[string]int32{
	"P1":  0,
	"P2":  1,
	"END": 2,
}

func (x Game_NextMove) String() string {
	return proto.EnumName(Game_NextMove_name, int32(x))
}
func (Game_NextMove) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12, 2} }

type Move_MoveBy int32

const (
	Move_P1 Move_MoveBy = 0
	Move_P2 Move_MoveBy = 1
)

var Move_MoveBy_name = map[int32]string{
	0: "P1",
	1: "P2",
}
var Move_MoveBy_value = map[string]int32{
	"P1": 0,
	"P2": 1,
}

func (x Move_MoveBy) String() string {
	return proto.EnumName(Move_MoveBy_name, int32(x))
}
func (Move_MoveBy) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13, 0} }

type CreateUserRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CreateUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CreateUserReply struct {
	SessionID int64 `protobuf:"varint,1,opt,name=sessionID" json:"sessionID,omitempty"`
}

func (m *CreateUserReply) Reset()                    { *m = CreateUserReply{} }
func (m *CreateUserReply) String() string            { return proto.CompactTextString(m) }
func (*CreateUserReply) ProtoMessage()               {}
func (*CreateUserReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateUserReply) GetSessionID() int64 {
	if m != nil {
		return m.SessionID
	}
	return 0
}

type DeleteUserRequest struct {
	SessionID int64  `protobuf:"varint,1,opt,name=sessionID" json:"sessionID,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteUserRequest) GetSessionID() int64 {
	if m != nil {
		return m.SessionID
	}
	return 0
}

func (m *DeleteUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type DeleteUserReply struct {
}

func (m *DeleteUserReply) Reset()                    { *m = DeleteUserReply{} }
func (m *DeleteUserReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserReply) ProtoMessage()               {}
func (*DeleteUserReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type LoginRequest struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginReply struct {
	SessionID int64 `protobuf:"varint,1,opt,name=sessionID" json:"sessionID,omitempty"`
}

func (m *LoginReply) Reset()                    { *m = LoginReply{} }
func (m *LoginReply) String() string            { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()               {}
func (*LoginReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LoginReply) GetSessionID() int64 {
	if m != nil {
		return m.SessionID
	}
	return 0
}

type ShowGamesRequest struct {
	SessionID  int64       `protobuf:"varint,1,opt,name=sessionID" json:"sessionID,omitempty"`
	WithStatus Game_Status `protobuf:"varint,2,opt,name=withStatus,enum=othello.Game_Status" json:"withStatus,omitempty"`
}

func (m *ShowGamesRequest) Reset()                    { *m = ShowGamesRequest{} }
func (m *ShowGamesRequest) String() string            { return proto.CompactTextString(m) }
func (*ShowGamesRequest) ProtoMessage()               {}
func (*ShowGamesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ShowGamesRequest) GetSessionID() int64 {
	if m != nil {
		return m.SessionID
	}
	return 0
}

func (m *ShowGamesRequest) GetWithStatus() Game_Status {
	if m != nil {
		return m.WithStatus
	}
	return Game_LOOKING_FOR_OPPONENT
}

type ShowGamesReply struct {
	Games []*Game `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
}

func (m *ShowGamesReply) Reset()                    { *m = ShowGamesReply{} }
func (m *ShowGamesReply) String() string            { return proto.CompactTextString(m) }
func (*ShowGamesReply) ProtoMessage()               {}
func (*ShowGamesReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ShowGamesReply) GetGames() []*Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type GetGameRequest struct {
	GameID int64 `protobuf:"varint,1,opt,name=gameID" json:"gameID,omitempty"`
}

func (m *GetGameRequest) Reset()                    { *m = GetGameRequest{} }
func (m *GetGameRequest) String() string            { return proto.CompactTextString(m) }
func (*GetGameRequest) ProtoMessage()               {}
func (*GetGameRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetGameRequest) GetGameID() int64 {
	if m != nil {
		return m.GameID
	}
	return 0
}

type GetGameReply struct {
	Game *Game `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
}

func (m *GetGameReply) Reset()                    { *m = GetGameReply{} }
func (m *GetGameReply) String() string            { return proto.CompactTextString(m) }
func (*GetGameReply) ProtoMessage()               {}
func (*GetGameReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetGameReply) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

type MakeMoveRequest struct {
	SessionID int64 `protobuf:"varint,1,opt,name=sessionID" json:"sessionID,omitempty"`
	X         int32 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y         int32 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
}

func (m *MakeMoveRequest) Reset()                    { *m = MakeMoveRequest{} }
func (m *MakeMoveRequest) String() string            { return proto.CompactTextString(m) }
func (*MakeMoveRequest) ProtoMessage()               {}
func (*MakeMoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *MakeMoveRequest) GetSessionID() int64 {
	if m != nil {
		return m.SessionID
	}
	return 0
}

func (m *MakeMoveRequest) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *MakeMoveRequest) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type MakeMoveReply struct {
	Game *Game `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
}

func (m *MakeMoveReply) Reset()                    { *m = MakeMoveReply{} }
func (m *MakeMoveReply) String() string            { return proto.CompactTextString(m) }
func (*MakeMoveReply) ProtoMessage()               {}
func (*MakeMoveReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *MakeMoveReply) GetGame() *Game {
	if m != nil {
		return m.Game
	}
	return nil
}

type Game struct {
	WhenStarted      *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=whenStarted" json:"whenStarted,omitempty"`
	Status           Game_Status                `protobuf:"varint,2,opt,name=status,enum=othello.Game_Status" json:"status,omitempty"`
	CompletionReason Game_CompletionReason      `protobuf:"varint,3,opt,name=completionReason,enum=othello.Game_CompletionReason" json:"completionReason,omitempty"`
	NextMove         Game_NextMove              `protobuf:"varint,4,opt,name=nextMove,enum=othello.Game_NextMove" json:"nextMove,omitempty"`
	MovesMade        []*Move                    `protobuf:"bytes,5,rep,name=movesMade" json:"movesMade,omitempty"`
}

func (m *Game) Reset()                    { *m = Game{} }
func (m *Game) String() string            { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()               {}
func (*Game) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Game) GetWhenStarted() *google_protobuf.Timestamp {
	if m != nil {
		return m.WhenStarted
	}
	return nil
}

func (m *Game) GetStatus() Game_Status {
	if m != nil {
		return m.Status
	}
	return Game_LOOKING_FOR_OPPONENT
}

func (m *Game) GetCompletionReason() Game_CompletionReason {
	if m != nil {
		return m.CompletionReason
	}
	return Game_NOT_COMPLETED
}

func (m *Game) GetNextMove() Game_NextMove {
	if m != nil {
		return m.NextMove
	}
	return Game_P1
}

func (m *Game) GetMovesMade() []*Move {
	if m != nil {
		return m.MovesMade
	}
	return nil
}

type Move struct {
	WhenMade *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=whenMade" json:"whenMade,omitempty"`
	MoveBy   Move_MoveBy                `protobuf:"varint,2,opt,name=moveBy,enum=othello.Move_MoveBy" json:"moveBy,omitempty"`
	X        int32                      `protobuf:"varint,3,opt,name=x" json:"x,omitempty"`
	Y        int32                      `protobuf:"varint,4,opt,name=y" json:"y,omitempty"`
}

func (m *Move) Reset()                    { *m = Move{} }
func (m *Move) String() string            { return proto.CompactTextString(m) }
func (*Move) ProtoMessage()               {}
func (*Move) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Move) GetWhenMade() *google_protobuf.Timestamp {
	if m != nil {
		return m.WhenMade
	}
	return nil
}

func (m *Move) GetMoveBy() Move_MoveBy {
	if m != nil {
		return m.MoveBy
	}
	return Move_P1
}

func (m *Move) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Move) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "othello.CreateUserRequest")
	proto.RegisterType((*CreateUserReply)(nil), "othello.CreateUserReply")
	proto.RegisterType((*DeleteUserRequest)(nil), "othello.DeleteUserRequest")
	proto.RegisterType((*DeleteUserReply)(nil), "othello.DeleteUserReply")
	proto.RegisterType((*LoginRequest)(nil), "othello.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "othello.LoginReply")
	proto.RegisterType((*ShowGamesRequest)(nil), "othello.ShowGamesRequest")
	proto.RegisterType((*ShowGamesReply)(nil), "othello.ShowGamesReply")
	proto.RegisterType((*GetGameRequest)(nil), "othello.GetGameRequest")
	proto.RegisterType((*GetGameReply)(nil), "othello.GetGameReply")
	proto.RegisterType((*MakeMoveRequest)(nil), "othello.MakeMoveRequest")
	proto.RegisterType((*MakeMoveReply)(nil), "othello.MakeMoveReply")
	proto.RegisterType((*Game)(nil), "othello.Game")
	proto.RegisterType((*Move)(nil), "othello.Move")
	proto.RegisterEnum("othello.Game_Status", Game_Status_name, Game_Status_value)
	proto.RegisterEnum("othello.Game_CompletionReason", Game_CompletionReason_name, Game_CompletionReason_value)
	proto.RegisterEnum("othello.Game_NextMove", Game_NextMove_name, Game_NextMove_value)
	proto.RegisterEnum("othello.Move_MoveBy", Move_MoveBy_name, Move_MoveBy_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OthelloGame service

type OthelloGameClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserReply, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserReply, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	ShowGames(ctx context.Context, in *ShowGamesRequest, opts ...grpc.CallOption) (*ShowGamesReply, error)
	GetGame(ctx context.Context, in *GetGameRequest, opts ...grpc.CallOption) (*GetGameReply, error)
	MakeMove(ctx context.Context, in *MakeMoveRequest, opts ...grpc.CallOption) (*MakeMoveReply, error)
}

type othelloGameClient struct {
	cc *grpc.ClientConn
}

func NewOthelloGameClient(cc *grpc.ClientConn) OthelloGameClient {
	return &othelloGameClient{cc}
}

func (c *othelloGameClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserReply, error) {
	out := new(CreateUserReply)
	err := grpc.Invoke(ctx, "/othello.OthelloGame/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *othelloGameClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserReply, error) {
	out := new(DeleteUserReply)
	err := grpc.Invoke(ctx, "/othello.OthelloGame/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *othelloGameClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := grpc.Invoke(ctx, "/othello.OthelloGame/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *othelloGameClient) ShowGames(ctx context.Context, in *ShowGamesRequest, opts ...grpc.CallOption) (*ShowGamesReply, error) {
	out := new(ShowGamesReply)
	err := grpc.Invoke(ctx, "/othello.OthelloGame/ShowGames", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *othelloGameClient) GetGame(ctx context.Context, in *GetGameRequest, opts ...grpc.CallOption) (*GetGameReply, error) {
	out := new(GetGameReply)
	err := grpc.Invoke(ctx, "/othello.OthelloGame/GetGame", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *othelloGameClient) MakeMove(ctx context.Context, in *MakeMoveRequest, opts ...grpc.CallOption) (*MakeMoveReply, error) {
	out := new(MakeMoveReply)
	err := grpc.Invoke(ctx, "/othello.OthelloGame/MakeMove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OthelloGame service

type OthelloGameServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserReply, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*DeleteUserReply, error)
	Login(context.Context, *LoginRequest) (*LoginReply, error)
	ShowGames(context.Context, *ShowGamesRequest) (*ShowGamesReply, error)
	GetGame(context.Context, *GetGameRequest) (*GetGameReply, error)
	MakeMove(context.Context, *MakeMoveRequest) (*MakeMoveReply, error)
}

func RegisterOthelloGameServer(s *grpc.Server, srv OthelloGameServer) {
	s.RegisterService(&_OthelloGame_serviceDesc, srv)
}

func _OthelloGame_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OthelloGameServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/othello.OthelloGame/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OthelloGameServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OthelloGame_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OthelloGameServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/othello.OthelloGame/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OthelloGameServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OthelloGame_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OthelloGameServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/othello.OthelloGame/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OthelloGameServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OthelloGame_ShowGames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowGamesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OthelloGameServer).ShowGames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/othello.OthelloGame/ShowGames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OthelloGameServer).ShowGames(ctx, req.(*ShowGamesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OthelloGame_GetGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OthelloGameServer).GetGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/othello.OthelloGame/GetGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OthelloGameServer).GetGame(ctx, req.(*GetGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OthelloGame_MakeMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakeMoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OthelloGameServer).MakeMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/othello.OthelloGame/MakeMove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OthelloGameServer).MakeMove(ctx, req.(*MakeMoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OthelloGame_serviceDesc = grpc.ServiceDesc{
	ServiceName: "othello.OthelloGame",
	HandlerType: (*OthelloGameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _OthelloGame_CreateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _OthelloGame_DeleteUser_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _OthelloGame_Login_Handler,
		},
		{
			MethodName: "ShowGames",
			Handler:    _OthelloGame_ShowGames_Handler,
		},
		{
			MethodName: "GetGame",
			Handler:    _OthelloGame_GetGame_Handler,
		},
		{
			MethodName: "MakeMove",
			Handler:    _OthelloGame_MakeMove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/othello.proto",
}

func init() { proto.RegisterFile("proto/othello.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 756 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0x06, 0xcc, 0xef, 0x10, 0x88, 0xd9, 0xfc, 0x1c, 0x1f, 0xeb, 0xe8, 0xb4, 0x75, 0x6e, 0xa2,
	0xb6, 0x02, 0xc5, 0x6d, 0x7a, 0xd3, 0x2a, 0x6a, 0x12, 0x68, 0x44, 0x03, 0x98, 0x6e, 0xa8, 0xaa,
	0x5e, 0x21, 0xa7, 0xd9, 0x00, 0x2a, 0x78, 0x29, 0x76, 0x4a, 0x78, 0x8b, 0x3e, 0x43, 0x5f, 0xaa,
	0xaf, 0xd3, 0xdd, 0xf5, 0xbf, 0x89, 0x92, 0xdc, 0x80, 0x67, 0xe6, 0x9b, 0x6f, 0x66, 0x3c, 0xe3,
	0x0f, 0xb6, 0xe6, 0x0b, 0xea, 0xd0, 0x06, 0x75, 0xc6, 0x64, 0x3a, 0xa5, 0x75, 0x61, 0xa1, 0x82,
	0x67, 0xaa, 0x4f, 0x46, 0x94, 0x8e, 0xa6, 0xa4, 0x21, 0xdc, 0x97, 0x37, 0xd7, 0x0d, 0x67, 0x32,
	0x23, 0xb6, 0x63, 0xce, 0xe6, 0x2e, 0x52, 0xa3, 0x50, 0x3b, 0x5d, 0x10, 0xd3, 0x21, 0x9f, 0x6d,
	0xb2, 0xc0, 0xe4, 0xc7, 0x0d, 0x8b, 0x22, 0x04, 0x59, 0xcb, 0x9c, 0x11, 0x25, 0xfd, 0x34, 0xbd,
	0x5f, 0xc2, 0xe2, 0x19, 0x6d, 0x43, 0x8e, 0xcc, 0xcc, 0xc9, 0x54, 0xc9, 0x08, 0xa7, 0x6b, 0x70,
	0xef, 0x7c, 0x4c, 0x2d, 0xa2, 0x48, 0xae, 0x57, 0x18, 0x48, 0x85, 0xe2, 0xdc, 0xb4, 0xed, 0x25,
	0x5d, 0x5c, 0x29, 0x59, 0x11, 0x08, 0x6c, 0xad, 0x01, 0x9b, 0xd1, 0x82, 0xf3, 0xe9, 0x0a, 0xfd,
	0x07, 0x25, 0x9b, 0xd8, 0xf6, 0x84, 0x5a, 0xed, 0xa6, 0xa8, 0x29, 0xe1, 0xd0, 0xa1, 0x75, 0xa1,
	0xd6, 0x24, 0x53, 0x12, 0xef, 0xf0, 0xde, 0x94, 0x58, 0xfd, 0x4c, 0xa2, 0x7e, 0x0d, 0x36, 0xa3,
	0x74, 0xac, 0xbe, 0xf6, 0x1e, 0x36, 0x3a, 0x74, 0x34, 0xb1, 0x7c, 0xf2, 0x60, 0xd4, 0x74, 0x74,
	0xd4, 0xfb, 0x48, 0x9f, 0x03, 0x78, 0x0c, 0x0f, 0xcf, 0x73, 0x0d, 0xf2, 0xc5, 0x98, 0x2e, 0xcf,
	0xd8, 0x4b, 0xb5, 0x1f, 0x37, 0xce, 0x6b, 0x80, 0xe5, 0xc4, 0x19, 0x5f, 0x38, 0xa6, 0x73, 0x63,
	0x8b, 0xda, 0x55, 0x7d, 0xbb, 0xee, 0x6f, 0x9c, 0x13, 0xd5, 0xdd, 0x18, 0x8e, 0xe0, 0xb4, 0x43,
	0xa8, 0x46, 0xea, 0xf0, 0xbe, 0xf6, 0x20, 0x37, 0xe2, 0x16, 0xab, 0x20, 0xed, 0x97, 0xf5, 0x4a,
	0x8c, 0x02, 0xbb, 0x31, 0x6d, 0x1f, 0xaa, 0x67, 0xc4, 0x11, 0x1e, 0xaf, 0xb9, 0x5d, 0xc8, 0xf3,
	0x50, 0xd0, 0x99, 0x67, 0x69, 0x07, 0xb0, 0x11, 0x20, 0x39, 0xfd, 0x33, 0xc8, 0x8e, 0xfc, 0xab,
	0x59, 0x63, 0x17, 0x21, 0xed, 0x1c, 0x36, 0xbb, 0xe6, 0x77, 0xd2, 0xa5, 0x3f, 0xc9, 0xe3, 0x46,
	0xdf, 0x80, 0xf4, 0xad, 0x98, 0x38, 0x87, 0xd3, 0xb7, 0xdc, 0x5a, 0x89, 0x4b, 0x63, 0xd6, 0x4a,
	0xd3, 0xa1, 0x12, 0x92, 0x3d, 0xb2, 0x81, 0x3f, 0x12, 0x64, 0xb9, 0x89, 0xde, 0x41, 0x79, 0x39,
	0x26, 0x16, 0x7b, 0x57, 0x0b, 0x87, 0x5c, 0x79, 0x29, 0x6a, 0xdd, 0xfd, 0x5c, 0xea, 0xfe, 0xe7,
	0x52, 0x1f, 0xf8, 0x9f, 0x0b, 0x8e, 0xc2, 0xd1, 0x4b, 0xc8, 0xdb, 0x0f, 0x6f, 0xc3, 0xc3, 0xa0,
	0x8f, 0x20, 0x7f, 0xa3, 0xb3, 0x39, 0x3b, 0x3a, 0x36, 0x14, 0x26, 0xa6, 0x4d, 0x2d, 0x31, 0x45,
	0x55, 0xff, 0x3f, 0x9e, 0x77, 0x9a, 0x40, 0xe1, 0xb5, 0x3c, 0xa4, 0x43, 0xd1, 0x22, 0xb7, 0x0e,
	0x1f, 0x5a, 0x7c, 0x5a, 0x55, 0x7d, 0x37, 0xce, 0xd1, 0xf3, 0xa2, 0x38, 0xc0, 0xa1, 0x17, 0x50,
	0x9a, 0xb1, 0x7f, 0xbb, 0x6b, 0x5e, 0x11, 0x25, 0x97, 0xd8, 0xbd, 0xc0, 0x86, 0x71, 0xed, 0x08,
	0xf2, 0x6e, 0xfb, 0x48, 0x81, 0xed, 0x8e, 0x61, 0x9c, 0xb7, 0x7b, 0x67, 0xc3, 0x0f, 0x06, 0x1e,
	0x1a, 0xfd, 0xbe, 0xd1, 0x6b, 0xf5, 0x06, 0x72, 0x0a, 0x95, 0xa1, 0xd0, 0xef, 0x1c, 0x7f, 0x65,
	0x11, 0x39, 0x8d, 0x2a, 0x50, 0x3a, 0x35, 0xba, 0xfd, 0x4e, 0x6b, 0xd0, 0x6a, 0xca, 0x19, 0xed,
	0x13, 0xc8, 0xc9, 0x31, 0x50, 0x0d, 0x2a, 0x3d, 0x63, 0x30, 0x0c, 0x61, 0x29, 0x04, 0x90, 0xef,
	0x1f, 0x0c, 0xbf, 0xb4, 0x7b, 0x8c, 0x81, 0x3f, 0xeb, 0xe2, 0x39, 0x83, 0x0a, 0x20, 0x0d, 0xda,
	0x2d, 0x59, 0x42, 0x25, 0xc8, 0xb5, 0x30, 0x36, 0xb0, 0x9c, 0xd5, 0xf6, 0xa0, 0xe8, 0x4f, 0x85,
	0xf2, 0x90, 0xe9, 0x1f, 0xb0, 0x7c, 0xfe, 0xaf, 0xb3, 0x5c, 0x86, 0x6f, 0xf5, 0x78, 0xdd, 0xdf,
	0x69, 0xc8, 0x0a, 0xc4, 0x1b, 0x28, 0xf2, 0x55, 0x89, 0x61, 0x1f, 0x5e, 0x6b, 0x80, 0xe5, 0x3b,
	0xe5, 0x6f, 0xe1, 0x64, 0xb5, 0xb6, 0x53, 0x4e, 0x2b, 0x7e, 0x4e, 0x56, 0xd8, 0xc3, 0xb8, 0x87,
	0x29, 0xc5, 0x0e, 0x33, 0xeb, 0x1f, 0xa6, 0x02, 0x79, 0x17, 0x9d, 0xec, 0x56, 0xff, 0x25, 0x41,
	0xd9, 0x70, 0x59, 0xc5, 0x15, 0x36, 0x01, 0x42, 0x31, 0x44, 0x6a, 0x50, 0x71, 0x4d, 0x92, 0x55,
	0xe5, 0xce, 0x18, 0x57, 0xaf, 0x14, 0x67, 0x09, 0x25, 0x2d, 0xc2, 0xb2, 0x26, 0x9b, 0x11, 0x96,
	0xa4, 0x06, 0xa6, 0xd0, 0x21, 0xe4, 0x84, 0x86, 0xa1, 0x9d, 0x00, 0x14, 0x55, 0x45, 0x75, 0x2b,
	0xe9, 0x76, 0xd3, 0x8e, 0xa1, 0x14, 0xc8, 0x0c, 0xfa, 0x37, 0xc0, 0x24, 0x25, 0x4e, 0xfd, 0xe7,
	0xae, 0x90, 0x4b, 0xf1, 0x16, 0x0a, 0x9e, 0x90, 0xa0, 0x10, 0x15, 0x17, 0x21, 0x75, 0x67, 0x3d,
	0xe0, 0x26, 0x1f, 0x41, 0xd1, 0x57, 0x01, 0x14, 0x8e, 0x97, 0x50, 0x19, 0x75, 0xf7, 0x8e, 0x88,
	0xc8, 0xbf, 0xcc, 0x8b, 0xa3, 0x78, 0xf5, 0x37, 0x00, 0x00, 0xff, 0xff, 0x89, 0x81, 0xbb, 0x8a,
	0x48, 0x07, 0x00, 0x00,
}
